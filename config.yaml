# ==========================================================
# YBFuzz Framework Configuration
# ==========================================================

# --- Run Control ---
duration: 300                  # Fuzzing duration in seconds
max_queries: 1000              # Maximum number of queries to generate
random_seed: null              # Set to an integer for reproducible runs, or null for random
log_level: INFO                # DEBUG, INFO, WARNING, ERROR
log_file: "ybfuzz_run.log"       # Main log file
bug_report_file: "bugs.log"    # File for detailed bug reports
sql_log_file: "executed_queries.sql"
catalog_refresh_interval: 20   # How often (in queries) to refresh the DB schema

# --- Database Connection ---
# The primary database to be fuzzed (YugabyteDB)
database:
  host: "127.0.0.1"
  port: 5433
  user: "yugabyte"
  password: "yugabyte"
  dbname: "yugabyte"
  schema_name: "ybfuzz_schema"

# --- Initial Database State ---
# SQL commands to run at the start of each fuzzing session to create a known state.
# Use '$$schema$$' as a placeholder for the schema_name above.
initial_db_setup_sqls:
  - "CREATE TABLE $$schema$$.products (id INT PRIMARY KEY, name TEXT, category TEXT, price NUMERIC, stock_count INT);"
  - "INSERT INTO $$schema$$.products SELECT g, 'Product-' || g, 'Category-' || (g%10), g*1.5, g*10 FROM generate_series(1,100) g;"

# --- Fuzzer Engine Strategy ---
engine_strategy:
  # Probability (0.0 to 1.0) of using the mutational engine.
  # The rest will use the generative engine.
  mutation_probability: 0.7

# --- Corpus for Mutational Engine ---
corpus:
  seed_file: "corpus/seed_queries.txt"

# --- Grammar and Generator Control (for Generative Engine) ---
grammar_file: "core/grammar.py"
max_recursion_depth:
  expression: 5
statement_weights:
  select_stmt: 100
rule_choice_weights:
  select_list_item:
    column_name: 0.5
    aggregate_function: 0.5

# --- Oracle Configuration ---
oracles:
  TLOracle:
    enabled: true
    enable_norec: true
    enable_tlp: true
    norec_settings:
      - "enable_nestloop"
      - "enable_hashjoin"
  
  QPGOracle:
    enabled: true
    enable_cert: true
    enable_dqp: true
    cert_threshold: 100

